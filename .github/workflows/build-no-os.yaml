name: no-OS
on:
  workflow_call:
    inputs:
      project:
        required: true
        type: string
      platform_name:
        type: string
      com_type:
        type: string
      sdram:
        type: string
      active_demo_mode:
        type: string
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Update submodules recursively
        run: |
          git submodule update --init --recursive

      - name: Build with no-OS
        run: |
          set -x
          pip install mbed-cli
          wget https://armkeil.blob.core.windows.net/developer/Files/downloads/gnu-rm/10.3-2021.10/gcc-arm-none-eabi-10.3-2021.10-x86_64-linux.tar.bz2
          tar xjf gcc-arm-none-eabi-10.3-2021.10-x86_64-linux.tar.bz2
          export PATH="${PATH}:${PWD}/gcc-arm-none-eabi-10.3-2021.10/bin"
          mbed config -G GCC_ARM_PATH "${PWD}/gcc-arm-none-eabi-10.3-2021.10/bin"

          pushd libraries/no-OS/libraries/mbed/mbed-os
          pip install -r requirements.txt
          popd

          pushd projects/${{ inputs.project }}
          export CFLAGS="-DPLATFORM_NAME=${{ inputs.platform_name }} -D${{ inputs.com_type }} -D${{ inputs.sdram }} -DACTIVE_DEMO_MODE_CONFIG=${{ inputs.active_demo_mode }}"
          make
          cat build/ad4130_iio-cflags-names.txt
          popd

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.project }}-${{ inputs.platform_name }}-${{ inputs.com_type }}-${{ inputs.sdram }}-${{ inputs.active_demo_mode }}
          path: |
            projects/${{ inputs.project }}/build/${{ inputs.project }}.bin
